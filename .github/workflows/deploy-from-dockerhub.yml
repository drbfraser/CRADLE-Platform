name: deploy-from-dockerhub
# Reusable workflow for deploying to the dev or stg servers.
# Called by the main CI/CD pipeline .yml file as needed.

on:
  workflow_call:
    inputs:
      RUNNER_NAME:
        required: true
        type: string
      DOMAIN:
        required: true
        type: string
      IMAGE_TAG:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string

    secrets:
      HUB_REPO_BACKEND:
        required: true
      HUB_REPO_FRONTEND:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  HUB_REPO_BACKEND: "${{ secrets.HUB_REPO_BACKEND }}"
  HUB_REPO_FRONTEND: "${{ secrets.HUB_REPO_FRONTEND }}"
  DOMAIN:    "${{ inputs.DOMAIN }}"
  IMAGE_TAG: "${{ inputs.IMAGE_TAG }}"
  AWS_REGION: us-west-2

jobs:
  deploy-from-dockerhub:
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    runs-on: [self-hosted, '${{ inputs.RUNNER_NAME }}']
    timeout-minutes: 60
    steps:
    - name: Checkout this code
      uses: actions/checkout@v3
      # Checkout the code, not into a container, because all work here is not in a container
      with:
        fetch-depth: 50
    - name: Copy server's existing .env file into local path before deployment
      run:  |
        cp /var/cradle/.env ./.env
    - name: Copy secrets into local secrets file. 
      run:  |
        # This is more secure than providing them as environment variables.
        echo "COGNITO_AWS_ACCESS_KEY_ID=${{ secrets.COGNITO_AWS_ACCESS_KEY_ID }}" > .env.cognito_secrets
        echo "COGNITO_AWS_SECRET_ACCESS_KEY=${{ secrets.COGNITO_AWS_SECRET_ACCESS_KEY }}" >> .env.cognito_secrets
        echo "COGNITO_USER_POOL_ID=${{ secrets.COGNITO_USER_POOL_ID }}" >> .env.cognito_secrets
        echo "COGNITO_APP_CLIENT_ID=${{ secrets.COGNITO_APP_CLIENT_ID }}" >> .env.cognito_secrets
        echo "COGNITO_CLIENT_SECRET=${{ secrets.COGNITO_CLIENT_SECRET }}" >> .env.cognito_secrets
    - name: Pull docker images from Docker Hub
      run:  |
        docker compose -f docker-compose.yml -f docker-compose.deploy.yml pull
    - name: Launch the server
      run:  |
        docker compose -f docker-compose.yml -f docker-compose.deploy.yml up -d
    - name: Cleanup unused docker images
      run:  |
        docker image prune -f
    - name: Apply migrations (once server is up)
      run:  |
        bash -c 'sleep 15'
        docker exec cradle_flask flask db upgrade
    - name: View state at end of deployment script
      run:  |
        docker images
        docker ps -a
        docker volume ls
        echo "::notice file=deploy-form-dockerhub.yml::Deployed image $IMAGE_TAG to $DOMAIN using runner ${{ inputs.runner_name}}"
        docker restart cradle_fluentbit 

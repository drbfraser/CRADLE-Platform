"""
initial_migration

Revision ID: 1_09521d0d6f0d
Revises:
Create Date: 2025-01-06 17:59:05.811897

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "1_09521d0d6f0d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "form_classification",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_form_classification")),
    )
    op.create_index(
        op.f("ix_form_classification_name"),
        "form_classification",
        ["name"],
        unique=False,
    )
    op.create_table(
        "health_facility",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column(
            "type",
            sa.Enum("HCF_2", "HCF_3", "HCF_4", "HOSPITAL", name="facilitytypeenum"),
            nullable=True,
        ),
        sa.Column("phone_number", sa.String(length=50), nullable=True),
        sa.Column("location", sa.String(length=50), nullable=True),
        sa.Column("about", sa.Text(), nullable=True),
        sa.Column("new_referrals", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("name", name=op.f("pk_health_facility")),
        sa.UniqueConstraint(
            "phone_number", name=op.f("uq_health_facility_phone_number")
        ),
    )
    op.create_table(
        "patient",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column(
            "sex", sa.Enum("MALE", "FEMALE", "OTHER", name="sexenum"), nullable=False
        ),
        sa.Column("is_pregnant", sa.Boolean(), nullable=True),
        sa.Column("medical_history", sa.Text(), nullable=True),
        sa.Column("drug_history", sa.Text(), nullable=True),
        sa.Column("allergy", sa.Text(), nullable=True),
        sa.Column("zone", sa.String(length=20), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("is_exact_date_of_birth", sa.Boolean(), nullable=True),
        sa.Column("village_number", sa.String(length=50), nullable=True),
        sa.Column("household_number", sa.String(length=50), nullable=True),
        sa.Column("date_created", sa.BigInteger(), nullable=False),
        sa.Column("last_edited", sa.BigInteger(), nullable=False),
        sa.Column("is_archived", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_patient")),
    )
    op.create_table(
        "relay_server_phone_number",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column("description", sa.String(length=50), nullable=True),
        sa.Column("last_received", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_relay_server_phone_number")),
        sa.UniqueConstraint(
            "phone_number", name=op.f("uq_relay_server_phone_number_phone_number")
        ),
    )
    op.create_table(
        "village",
        sa.Column("village_number", sa.String(length=50), nullable=False),
        sa.Column("zone_number", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("village_number", name=op.f("pk_village")),
    )
    op.create_table(
        "form_template",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("version", sa.Text(), nullable=True),
        sa.Column("date_created", sa.BigInteger(), nullable=False),
        sa.Column("form_classification_id", sa.String(length=50), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_classification_id"],
            ["form_classification.id"],
            name=op.f("fk_form_template_form_classification_id_form_classification"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_form_template")),
    )
    op.create_table(
        "medical_record",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.Column("information", sa.Text(), nullable=False),
        sa.Column("is_drug_record", sa.Boolean(), nullable=False),
        sa.Column("date_created", sa.BigInteger(), nullable=False),
        sa.Column("last_edited", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
            name=op.f("fk_medical_record_patient_id_patient"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_medical_record")),
    )
    op.create_table(
        "pregnancy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.Column("start_date", sa.BigInteger(), nullable=False),
        sa.Column("end_date", sa.BigInteger(), nullable=True),
        sa.Column("outcome", sa.Text(), nullable=True),
        sa.Column("last_edited", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
            name=op.f("fk_pregnancy_patient_id_patient"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pregnancy")),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=25), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("role", sa.String(length=50), nullable=True),
        sa.Column("health_facility_name", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["health_facility_name"],
            ["health_facility.name"],
            name=op.f("fk_user_health_facility_name_health_facility"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "assessment",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("follow_up_instructions", sa.Text(), nullable=True),
        sa.Column("special_investigations", sa.Text(), nullable=True),
        sa.Column("diagnosis", sa.Text(), nullable=True),
        sa.Column("treatment", sa.Text(), nullable=True),
        sa.Column("medication_prescribed", sa.Text(), nullable=True),
        sa.Column("date_assessed", sa.BigInteger(), nullable=False),
        sa.Column("follow_up_needed", sa.Boolean(), nullable=True),
        sa.Column("healthcare_worker_id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["healthcare_worker_id"],
            ["user.id"],
            name=op.f("fk_assessment_healthcare_worker_id_user"),
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
            name=op.f("fk_assessment_patient_id_patient"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_assessment")),
    )
    op.create_table(
        "form",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("lang", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("category", sa.Text(), nullable=False),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.Column("form_template_id", sa.String(length=50), nullable=True),
        sa.Column("date_created", sa.BigInteger(), nullable=False),
        sa.Column("last_edited", sa.BigInteger(), nullable=False),
        sa.Column("last_edited_by", sa.Integer(), nullable=True),
        sa.Column("form_classification_id", sa.String(length=50), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_classification_id"],
            ["form_classification.id"],
            name=op.f("fk_form_form_classification_id_form_classification"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["form_template_id"],
            ["form_template.id"],
            name=op.f("fk_form_form_template_id_form_template"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["last_edited_by"],
            ["user.id"],
            name=op.f("fk_form_last_edited_by_user"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
            name=op.f("fk_form_patient_id_patient"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_form")),
    )
    op.create_table(
        "patient_association",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.Column("health_facility_name", sa.String(length=50), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["health_facility_name"],
            ["health_facility.name"],
            name=op.f("fk_patient_association_health_facility_name_health_facility"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
            name=op.f("fk_patient_association_patient_id_patient"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_patient_association_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_patient_association")),
    )
    op.create_table(
        "referral",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("date_referred", sa.BigInteger(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("action_taken", sa.Text(), nullable=True),
        sa.Column("is_assessed", sa.Boolean(), nullable=False),
        sa.Column("date_assessed", sa.BigInteger(), nullable=True),
        sa.Column("is_cancelled", sa.Boolean(), nullable=False),
        sa.Column("cancel_reason", sa.Text(), nullable=True),
        sa.Column("date_cancelled", sa.BigInteger(), nullable=True),
        sa.Column("not_attended", sa.Boolean(), nullable=False),
        sa.Column("not_attend_reason", sa.Text(), nullable=True),
        sa.Column("date_not_attended", sa.BigInteger(), nullable=True),
        sa.Column("last_edited", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("patient_id", sa.String(length=50), nullable=True),
        sa.Column("health_facility_name", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["health_facility_name"],
            ["health_facility.name"],
            name=op.f("fk_referral_health_facility_name_health_facility"),
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"], ["patient.id"], name=op.f("fk_referral_patient_id_patient")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_referral_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_referral")),
    )
    op.create_table(
        "sms_secret_key",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("secret_key", sa.String(length=256), nullable=False),
        sa.Column("stale_date", sa.DateTime(), nullable=False),
        sa.Column("expiry_date", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_sms_secret_key_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sms_secret_key")),
    )
    op.create_table(
        "supervises",
        sa.Column("cho_id", sa.Integer(), nullable=True),
        sa.Column("vht_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cho_id"],
            ["user.id"],
            name=op.f("fk_supervises_cho_id_user"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["vht_id"],
            ["user.id"],
            name=op.f("fk_supervises_vht_id_user"),
            ondelete="CASCADE",
        ),
    )
    op.create_index(
        op.f("ix_supervises_cho_id"), "supervises", ["cho_id"], unique=False
    )
    op.create_table(
        "user_phone_number",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_user_phone_number_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_phone_number")),
        sa.UniqueConstraint(
            "phone_number", name=op.f("uq_user_phone_number_phone_number")
        ),
    )
    op.create_table(
        "question",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("is_blank", sa.Boolean(), nullable=False),
        sa.Column("question_index", sa.Integer(), nullable=False),
        sa.Column(
            "question_text", sa.Text(collation="utf8mb4_general_ci"), nullable=False
        ),
        sa.Column(
            "question_type",
            sa.Enum(
                "INTEGER",
                "DECIMAL",
                "STRING",
                "MULTIPLE_CHOICE",
                "MULTIPLE_SELECT",
                "DATE",
                "TIME",
                "DATETIME",
                "CATEGORY",
                name="questiontypeenum",
            ),
            nullable=False,
        ),
        sa.Column("has_comment_attached", sa.Boolean(), nullable=False),
        sa.Column("required", sa.Boolean(), nullable=False),
        sa.Column("allow_future_dates", sa.Boolean(), nullable=False),
        sa.Column("allow_past_dates", sa.Boolean(), nullable=False),
        sa.Column("units", sa.Text(), nullable=True),
        sa.Column("visible_condition", sa.Text(), nullable=False),
        sa.Column(
            "mc_options", sa.Text(collation="utf8mb4_general_ci"), nullable=False
        ),
        sa.Column("num_min", sa.Float(), nullable=True),
        sa.Column("num_max", sa.Float(), nullable=True),
        sa.Column("string_max_length", sa.Integer(), nullable=True),
        sa.Column("answers", sa.Text(), nullable=False),
        sa.Column("category_index", sa.Integer(), nullable=True),
        sa.Column("string_max_lines", sa.Integer(), nullable=True),
        sa.Column("form_id", sa.String(length=50), nullable=True),
        sa.Column("form_template_id", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["form.id"],
            name=op.f("fk_question_form_id_form"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["form_template_id"],
            ["form_template.id"],
            name=op.f("fk_question_form_template_id_form_template"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_question")),
    )
    op.create_table(
        "reading",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("systolic_blood_pressure", sa.Integer(), nullable=True),
        sa.Column("diastolic_blood_pressure", sa.Integer(), nullable=True),
        sa.Column("heart_rate", sa.Integer(), nullable=True),
        sa.Column("symptoms", sa.Text(), nullable=True),
        sa.Column(
            "traffic_light_status",
            sa.Enum(
                "NONE",
                "GREEN",
                "YELLOW_UP",
                "YELLOW_DOWN",
                "RED_UP",
                "RED_DOWN",
                name="trafficlightenum",
            ),
            nullable=True,
        ),
        sa.Column("date_taken", sa.BigInteger(), nullable=True),
        sa.Column("date_retest_needed", sa.BigInteger(), nullable=True),
        sa.Column(
            "retest_of_previous_reading_ids", sa.String(length=100), nullable=True
        ),
        sa.Column("is_flagged_for_follow_up", sa.Boolean(), nullable=True),
        sa.Column("last_edited", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.Column("referral_id", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["patient_id"], ["patient.id"], name=op.f("fk_reading_patient_id_patient")
        ),
        sa.ForeignKeyConstraint(
            ["referral_id"],
            ["referral.id"],
            name=op.f("fk_reading_referral_id_referral"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_reading_user_id_user"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_reading")),
    )
    op.create_table(
        "question_lang_version",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("lang", sa.Text(), nullable=False),
        sa.Column(
            "question_text", sa.Text(collation="utf8mb4_general_ci"), nullable=False
        ),
        sa.Column(
            "mc_options", sa.Text(collation="utf8mb4_general_ci"), nullable=False
        ),
        sa.Column("question_id", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["question.id"],
            name=op.f("fk_question_lang_version_question_id_question"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_question_lang_version")),
    )
    op.create_table(
        "urine_test",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("leukocytes", sa.String(length=5), nullable=True),
        sa.Column("nitrites", sa.String(length=5), nullable=True),
        sa.Column("glucose", sa.String(length=5), nullable=True),
        sa.Column("protein", sa.String(length=5), nullable=True),
        sa.Column("blood", sa.String(length=5), nullable=True),
        sa.Column("reading_id", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["reading_id"],
            ["reading.id"],
            name=op.f("fk_urine_test_reading_id_reading"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_urine_test")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("urine_test")
    op.drop_table("question_lang_version")
    op.drop_table("reading")
    op.drop_table("question")
    op.drop_table("user_phone_number")
    op.drop_index(op.f("ix_supervises_cho_id"), table_name="supervises")
    op.drop_table("supervises")
    op.drop_table("sms_secret_key")
    op.drop_table("referral")
    op.drop_table("patient_association")
    op.drop_table("form")
    op.drop_table("assessment")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("pregnancy")
    op.drop_table("medical_record")
    op.drop_table("form_template")
    op.drop_table("village")
    op.drop_table("relay_server_phone_number")
    op.drop_table("patient")
    op.drop_table("health_facility")
    op.drop_index(op.f("ix_form_classification_name"), table_name="form_classification")
    op.drop_table("form_classification")
    # ### end Alembic commands ###
